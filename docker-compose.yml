version: '2'
services:

  nginx:
    # restart: always
    container_name: "nginx"
    image: "nginx"
    volumes:
      # We must define an upstream for each gunicorn container
      - ./conf/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./conf/nginx/ssl:/etc/nginx/ssl:ro
      # We must define a site enabled for each gunicorn container
      - ./data/nginx/log/:/var/log/nginx/
#    ports:
#      - "80:80"
#      - "443:443"

    command: [ 'nginx-debug', '-g', 'daemon off;']

#    volumes_from:
#      - gunicorn
#
#    depends_on:
#      # Depends on every gunicorn container
#      - gunicorn

    networks:
      vpcbr:
        ipv4_address: 10.9.0.2

### Infrastructure for every client
  # Each client will have a pair of gunicorn - mongo containers with his own data.

#  gunicorn:
#    # restart: always
#    build: .
#    container_name: "gunicorn"
#    ports:
#    - "8000:8000"
#    - "8080:8080"
#    expose:
#      - "8000"
#      - "8080"
#    volumes:
#      - .:/code
#      - ./data/gunicorn/logs:/var/log/pentest-studio/
#      - ./data/gunicorn/static:/static
#
#    depends_on:
#      - postgres
#
#    networks:
#      vpcbr:
#        ipv4_address: 10.9.0.10

  redis:
    container_name: "redis"
    image: "redis"

    expose:
      - "6379"

    volumes:
      - ./data/redis:/data

    networks:
      vpcbr:
        ipv4_address: 10.9.0.12

  postgres:
    image: postgres
    restart: always
    container_name: "postgres"

    expose:
      - "5432"

    volumes:
      # - ./conf/postgres:/etc/postgres
      - ./data/postgres:/var/lib/postgresql

    environment:
      POSTGRES_PASSWORD: faVbPbZ9AkJ3eTg5

    networks:
      vpcbr:
        ipv4_address: 10.9.0.13


networks:
  vpcbr:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
     config:
      - subnet: 10.9.0.0/24
        gateway: 10.9.0.1