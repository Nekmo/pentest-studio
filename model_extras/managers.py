from django.contrib.contenttypes.fields import GenericForeignKey
from django.contrib.contenttypes.models import ContentType
from django.db import models


class ContentObjectManager(models.Manager):
    _content_object_fields = [
        'content_object',
    ]

    def get_or_create(self, defaults=None, **kwargs):
        kwargs = self._update_model_params(**kwargs)
        return super(ContentObjectManager, self).get_or_create(defaults, **kwargs)

    def _update_model_params(self, **kwargs):
        kwargs: dict = dict(kwargs)
        for field in self._content_object_fields:
            if field not in kwargs:
                continue
            field_instance: GenericForeignKey = getattr(self.model, field)
            content_object = kwargs.pop(field)
            content_type = ContentType.objects.get_for_model(content_object.__class__)
            object_id = content_object.pk
            kwargs[field_instance.ct_field] = content_type
            kwargs[field_instance.fk_field] = object_id
        return kwargs

    def filter(self, *args, **kwargs):
        kwargs = self._update_model_params(**kwargs)
        return super(ContentObjectManager, self).filter(*args, **kwargs)
