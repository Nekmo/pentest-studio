import os
from logging import getLogger
from typing import Optional, Iterator

import requests
from django.conf import settings
from django.urls import reverse

from pentest_worker.compress import create_memory_tar
from pentest_worker.config import get_worker_config

logger = getLogger(__name__)


class ApiList:
    def __init__(self, viewname: str):
        self.path = reverse(viewname)
        self.page = 0
        self.current_data: Optional[dict] = None
        self.current_results: Iterator = iter([])

    def __iter__(self):
        self.page = 0
        return self

    def _make_request(self):
        self.current_data = request('get', self.path, params={'page': self.page}).json()
        self.current_results = iter(self.current_data.get('results', []))

    def __next__(self):
        next_result = next(self.current_results, None)
        if next_result is None and (self.page == 0 or self.current_data.get('next')):
            self.page += 1
            self._make_request()
            next_result = next(self.current_results)
        if next_result is None:
            raise StopIteration
        return next_result


def get_client_ip(request):
    x_forwarded_for = request.META.get('HTTP_X_FORWARDED_FOR')
    if x_forwarded_for:
        ip = x_forwarded_for.split(',')[0]
    else:
        ip = request.META.get('REMOTE_ADDR')
    return ip


def request(method, path, **kwargs):
    headers = kwargs.pop('headers', None) or {}
    headers['Authorization'] = 'Token {key}'.format(**get_worker_config())
    url = '{}{}'.format(settings.PENTEST_STUDIO_URL.rstrip('/'), path)
    return requests.request(method, url, headers=headers, **kwargs)


def upload_worker_data(term_name):
    directory = os.path.join(settings.WORKER_ACTIONS_TEMP_DIRECTORY, term_name)
    tar = create_memory_tar(directory)
    path = reverse('action-worker-upload', kwargs={'pk': term_name})
    request('put', path, files={'file': tar})


def block_task(term_name):
    path = reverse('action-block-task', kwargs={'pk': term_name})
    resp = request('post', path)
    return resp.json()


def get_action(action_pk):
    path = reverse('action-detail', kwargs={'pk': action_pk})
    resp = request('get', path)
    return resp.json()


def get_all_plugins():
    return ApiList('plugin-list')
