from urllib.parse import urlparse
from uuid import uuid4

from django.conf import settings
from django.contrib.auth import get_user_model
from django.db import models

# Create your models here.
from rest_framework.authtoken.models import Token

from model_extras.models import DateModel
from pentest_worker.managers import ServerManager
from pentest_worker.rsa import encrypt


# TODO: rename to Worker
class Server(DateModel):
    name = models.CharField(max_length=80)
    url = models.URLField()
    country = models.CharField(max_length=3)
    ip = models.GenericIPAddressField(blank=True, null=True)
    user = models.OneToOneField(get_user_model(), on_delete=models.CASCADE, related_name='worker')

    objects = ServerManager()

    @property
    def is_active(self):
        return self.user.is_active

    @property
    def user_token(self):
        return Token.objects.get(user=self.user).key

    @property
    def websocket_url(self):
        for old, new in [('http:', 'ws:'), ('https:', 'wss:')]:
            if self.url.startswith(old):
                return self.url.replace(old, new)
        return self.url

    def save(self, *args, **kwargs):
        if not self.pk:
            user = get_user_model().objects.create(
                username=uuid4().hex,
            )
            Token.objects.create(user=user)
            self.user = user
        return super().save(*args, **kwargs)
