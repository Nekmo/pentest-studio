from random import randint

from django.core.cache import cache
from django.db import models
from django.db.models import Count


class WorkerQuerySet(models.QuerySet):
    def random(self):
        if not self.exists():
            return
        count = self.aggregate(count=Count('id'))['count']
        random_index = randint(0, count - 1)
        return self.all()[random_index]

    def best(self):
        worker_colors: dict = cache.get_many(cache.keys("worker_color_status_*"))
        workers_sorted = [x[0] for x in sorted(worker_colors.items(), key=lambda x: x[1])]
        worker_key = next(iter(workers_sorted), None)
        if worker_key:
            return self.get(pk=worker_key.split('_')[-1])


WorkerManager = models.Manager.from_queryset(WorkerQuerySet)
