import os
import tarfile

from django_filters.rest_framework import DjangoFilterBackend
from rest_framework import viewsets, filters
from rest_framework.decorators import action
from rest_framework.response import Response

from pentest_studio import settings
from pentest_studio.api import BaseViewSetMixIn
from projects.api.serializers import ProjectSerializer, ActionSerializer, DetailProjectSerializer, \
    DetailActionSerializer
from projects.models import Project, Action


class ProjectViewSet(BaseViewSetMixIn, viewsets.ModelViewSet):
    """
    """
    queryset = Project.objects.all()
    serializer_class = ProjectSerializer
    filter_backends = (filters.OrderingFilter, filters.SearchFilter, DjangoFilterBackend)
    search_fields = ('name',)
    filter_fields = ('parent', 'created_at', 'updated_at')
    ordering_fields = filter_fields
    detail_serializer_class = DetailProjectSerializer


class ActionViewSet(BaseViewSetMixIn, viewsets.ModelViewSet):
    """
    """
    queryset = Action.objects.all()
    serializer_class = ActionSerializer
    filter_backends = (filters.OrderingFilter, filters.SearchFilter, DjangoFilterBackend)
    search_fields = ('name',)
    filter_fields = ('parent', 'parent', 'created_at', 'updated_at')
    ordering_fields = filter_fields
    detail_serializer_class = DetailActionSerializer

    @action(methods=['put'], detail=True)
    def worker_upload(self, request, pk):
        file_obj = request.data['file']
        instance = self.get_object()
        directory = os.path.join(settings.SERVER_ACTIONS_DIRECTORY, str(instance.pk))
        os.makedirs(directory, exist_ok=True)
        t = tarfile.open(fileobj=file_obj.file)
        t.extractall(directory)
        return Response(status=204)
