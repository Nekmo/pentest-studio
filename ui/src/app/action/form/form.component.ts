import { Component, OnInit } from '@angular/core';
import {FormControl, FormGroup} from "@angular/forms";
import {HttpClient} from "@angular/common/http";
import {getCookie} from "../../httpUtils";
import {ActivatedRoute, Router} from "@angular/router";

@Component({
    selector: 'app-form',
    templateUrl: './form.component.html',
    styleUrls: ['./form.component.scss']
})
export class FormComponent implements OnInit {

    instanceId: number;
    projectId: number;
    project: any;
    shortcut: any;
    shortcutId: string;
    url: string = '/api/projects/actions/';
    projectUrl: string = '/api/projects/projects/';
    serverUrl: string = '/api/workers/servers/';
    shortcutUrl: string = '/api/projects/plugin_shortcuts/';
    projectParam: string = 'projectId';
    projectRouter: string = '/projects';
    servers: any[];
    form = new FormGroup({
      name: new FormControl(''),
      command: new FormControl(''),
      url: new FormControl(''),
      type: new FormControl(''),
      description: new FormControl(''),
      data: new FormControl(''),
    });

    constructor(private http: HttpClient,
                private route: ActivatedRoute,
                private router: Router) { }

    ngOnInit() {
        this.setProject();
        this.http.get(this.serverUrl).subscribe((data: any[]) => {
            this.servers = data;
        });
        this.shortcutId = this.route.snapshot.queryParamMap.get('shortcut');
        if(this.shortcutId) {
            this.setShortcut(this.shortcutId);
        }
    }

    setProject() {
        this.projectId = +this.route.snapshot.paramMap.get(this.projectParam);
        this.http.get(`${this.projectUrl}${this.projectId}`).subscribe((project) => {
            this.project = project;
        });
    }

    setShortcut(shortcutId) {
        this.http.get(`${this.shortcutUrl}${shortcutId}`).subscribe((data) => {
            this.form.controls['name'].patchValue(data['name']);
            this.shortcut = data;
        });
        this.http.post(`${this.shortcutUrl}${shortcutId}/render_command/`, {
            project_id: this.projectId, env: {}
        }, {responseType: 'text', headers: {'Accept': 'text/plain'}}).subscribe((data) => {
            this.form.controls['command'].patchValue(data);
        });
    }

    save(data) {
        data['project'] = this.project;
        this.http[(this.instanceId ? 'put' : 'post')](
            this.url, data, {headers: {'X-CSRFToken': getCookie('csrftoken') || ''}}
        ).subscribe(() => {
            this.router.navigate([this.projectRouter, this.instanceId]);
        });
    }

}
